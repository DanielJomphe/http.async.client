#+TITLE: Async Http Client - Clojure - To Do
#+AUTHOR: Hubert Iwaniuk
#+EMAIL: neotyk@kungfoo.pl
#+INFOJS_OPT: view:info toc:1

* Receive [6/6]                                                   :code:rel1:
** DONE Status Line                                                    :rel1:
** DONE Headers                                                        :rel1:
** DONE Body                                                           :rel1:
   Instead of *id*, pass *(ref {})* to callbacks so they have their own
   STM ref'ed map.
** DONE Implement response *promise*                                   :rel1:
** DONE Consume stream                                                 :rel1:
** DONE Error function                                                 :rel1:
* Send [4/7]                                                           :code:
** DONE Query parameters                                               :rel1:
** DONE Parameters                                                     :rel1:
** DONE Parameters allowed only on PUT/POST                            :rel1:
** DONE PUT/POST body [3/3]                                            :rel1:
*** DONE Support sending strings                                       :rel1:
*** DONE Support sending map as form encoded data                      :rel1:
*** DONE Support InputStream body                                      :rel1:
** TODO All HTTP verbs [6/7]
*** DONE GET                                                           :rel1:
*** DONE POST                                                          :rel1:
*** DONE PUT                                                           :rel1:
*** DONE DELETE                                                        :rel1:
*** DONE HEAD                                                          :rel1:
*** DONE OPTIONS                                                       :rel1:
*** TODO Others once supported by AHC-Java                             :rel2:
** TODO PUT/POST streaming body                                        :rel4:
   That can be done with *clojure.core/add-watch*.
   Watcher in that scenario will grab new content and write it via
   AHC, or alternatively will *clojure.core/send-off* to execute
   IO operation in separate thread.
** TODO Multipart                                                      :rel4:
* Configuration [0/2]
** TODO Global configuration of AHC                                    :rel4:
   Connection limiting per host.
   Global proxy.
** TODO Per request configuration                                      :rel4:
   For stuff like proxy, timeout.
* Tasks [7/9]
** DONE License                                                         :rel1:
** DONE Cleanup namespaces                                              :rel1:
*** async.http.client
    Should contain helper functions to call all HTTP verbs.
    Default set of call-backs.
*** async.http.client.request
    Lower level of requesting:
    - execute-request
    - prepare-request
** DONE Release 0.1.0                                                  :rel1:
** DONE Release 0.1.1                                                  :rel2:
** TODO Release 0.2.0                                                  :rel3:
   Changes:
   - Stream as seq
   - Streams used instead of byte vectors (issue-1)
   - keyworded maps are used in api
** DONE Make tests stand-alone                                         :rel1:
   Test suite should not fail when there is now hello-www on port 8080.
** DONE Simplify request preparation                                   :rel1:
   For now fns like GET will call prepare-get that will call
   prepare-reqeust. I don't think prepare-get is necessary,
   should be quite fine to only use *prepare-request*.
** DONE Use last argument as key worded map                            :rel3:
   As suggested by [[http://blog.licenser.net/][Licenser]] on #clojure [[http://clojure-log.n01se.net/date/2010-07-08.html#i25][here]].
** TODO Review documentation                                           :rel3:
