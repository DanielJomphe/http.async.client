todo -*- mode: org -*-
#+TITLE: Async Http Client - Clojure - To Do
#+AUTHOR: Hubert Iwaniuk

* Receive [5/6]                                                    :code:rel1:
** DONE Status Line                                                     :rel1:
** DONE Headers                                                         :rel1:
** DONE Body                                                            :rel1:
   Instead of *id*, pass *(ref {})* to callbacks so they have their own
   STM ref'ed map.
** DONE Implement response *promise*                                    :rel1:
** TODO Consume stream                                                  :rel1:
** DONE Error function                                                  :rel1:
* Send [3/6]                                                            :code:
** DONE Query parameters                                                :rel1:
** DONE Parameters                                                     :rel1:
** DONE Parameters allowed only on PUT/POST                            :rel1:
** TODO PUT/POST body                                                   :rel1:
** TODO All HTTP verbs                                                  :rel1:
** TODO PUT/POST streaming body                                         :rel2:
   That can be done with *clojure.core/add-watch*.
   Watcher in that scenario will grab new content and write it via
   AHC, or alternatively will *clojure.core/send-off* to execute
   IO operation in separate thread.
* Tasks [2/3]
** DONE License                                                         :rel1:
** DONE Cleanup namespaces                                              :rel1:
*** async.http.client
    Should contain helper functions to call all HTTP verbs.
    Default set of call-backs.
*** async.http.client.request
    Lower level of requesting:
    - execute-request
    - prepare-request
** TODO Release 1.0                                                     :rel1:
