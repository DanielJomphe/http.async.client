#+TITLE: Async Http Client - Clojure - To Do
#+AUTHOR: Hubert Iwaniuk
#+EMAIL: neotyk@kungfoo.pl
#+INFOJS_OPT: view:info toc:1

* Receive [5/6]                                                   :code:rel1:
** DONE Status Line                                                     :rel1:
** DONE Headers                                                         :rel1:
** DONE Body                                                            :rel1:
   Instead of *id*, pass *(ref {})* to callbacks so they have their own
   STM ref'ed map.
** DONE Implement response *promise*                                    :rel1:
** TODO Consume stream                                                  :rel1:
** DONE Error function                                                  :rel1:
* Send [3/7]                                                           :code:
** DONE Query parameters                                               :rel1:
** DONE Parameters                                                     :rel1:
** DONE Parameters allowed only on PUT/POST                            :rel1:
** TODO PUT/POST body [2/3]                                            :rel1:
*** DONE Support sending strings                                       :rel1:
*** DONE Support sending map as form encoded data                      :rel1:
*** TODO Support InputStream body                                      :rel1:
** TODO All HTTP verbs [3/7]                                           :rel1:
*** DONE GET                                                           :rel1:
*** DONE POST                                                          :rel1:
*** DONE PUT                                                           :rel1:
*** TODO DELETE                                                        :rel1:
*** TODO HEAD                                                          :rel1:
*** TODO OPTIONS                                                       :rel1:
*** TODO Others once supported by AHC-Java                             :rel2:
** TODO PUT/POST streaming body                                        :rel2:
   That can be done with *clojure.core/add-watch*.
   Watcher in that scenario will grab new content and write it via
   AHC, or alternatively will *clojure.core/send-off* to execute
   IO operation in separate thread.
** TODO Multipart                                                      :rel2:
* Configuration [0/2]
** TODO Global configuration of AHC                                    :rel2:
   Connection limiting per host.
   Global proxy.
** TODO Per request configuration                                      :rel2:
   For stuff like proxy, timeout.
* Tasks [2/3]
** DONE License                                                         :rel1:
** DONE Cleanup namespaces                                              :rel1:
*** async.http.client
    Should contain helper functions to call all HTTP verbs.
    Default set of call-backs.
*** async.http.client.request
    Lower level of requesting:
    - execute-request
    - prepare-request
** TODO Release 1.0                                                     :rel1:
